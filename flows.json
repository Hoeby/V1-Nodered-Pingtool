[
    {
        "id": "166b3f5d22a2184b",
        "type": "tab",
        "label": "Ping-tool",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2ee78d8d65f6b35e",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Save file location",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "f817febafa2e2ec9",
            "30ac23dad2ddc07e",
            "48e7d2edc867c8dc",
            "e81b6e98f6523df9",
            "6f0aacad3197c943",
            "cc2b5b71f0e2aaac",
            "5019b114fc441426",
            "f0ba8d7f10def91b",
            "a0c0c0080beb4363",
            "9c57b09a4fcc718f",
            "1a17beb47391b046",
            "f3877b34982a22dc",
            "da6d4389bb110713",
            "c212deb3835f4c46",
            "d30d268db0d190ec",
            "53e61568675bdbd7",
            "45204b9d5854f8c8"
        ],
        "x": 114,
        "y": 2119,
        "w": 1362,
        "h": 202
    },
    {
        "id": "e7af55a89184cc8f",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Set flow clients-ping na deploy",
        "style": {
            "label": true,
            "stroke": "#3f93cf",
            "color": "#3f93cf"
        },
        "nodes": [
            "4a9dcdcb6ce78c42",
            "6c339e319be6d740",
            "5cdab53b1f50821a",
            "160c0d2d17742351",
            "e95df38e60553db0",
            "539a91ea417f7510",
            "d3702ba43792c8ae",
            "1c6719532fd813a9",
            "adc79ba653b9050f",
            "f38c0c07b19553f2",
            "b0ccc9f9559fe1b1",
            "4b7304f5dc110112",
            "a23e04b0a3ca55d6",
            "4d4149d66f32721a",
            "a84f133d7e4eae3c",
            "c38f40f199c20a55",
            "d9ade764157951c1",
            "72227791611cb138",
            "fccd36321a0d857a"
        ],
        "x": 114,
        "y": 2339,
        "w": 1642,
        "h": 122
    },
    {
        "id": "5648f39f55395f07",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Client detele options",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "55e1c2243ed9a00b",
            "5a2e9fa3a8e436cf",
            "412fdfce20f6c852",
            "3df003875fb9111e",
            "69eb201b72270016",
            "f2af0375bf07a2e1",
            "e42a7372272aca21",
            "ee549fc8a0f25068",
            "df48d70d959be24f",
            "68a3faa121e42b70",
            "ef2ad954ed0f8af4",
            "9f7143fbd1c1a75c",
            "f6f61561ea7be543"
        ],
        "x": 114,
        "y": 419,
        "w": 1632,
        "h": 182
    },
    {
        "id": "562046fbd09ca898",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Flow update nodes",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "7aa9923868d01e2a",
            "9722819796be57a5",
            "c780f69af990ac7d",
            "29c4cf9aed2e18db",
            "678b138e5c386f71",
            "cf81bc155ba0dcde",
            "ca90baf0a86dc3c2",
            "797f472cbb68e6b5",
            "22373071c84e9b2c"
        ],
        "x": 114,
        "y": 2579,
        "w": 752,
        "h": 262
    },
    {
        "id": "d663ded32689f05e",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Add clients",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "3a5a77add871428c",
            "05c46393987e9194",
            "53de060928284d7d",
            "b3f434704c543216",
            "2052df2c4f961b94",
            "b82b69e0154e728e",
            "8b5ea82d145ec4eb",
            "13cca1c9f739cf27",
            "2467ec7cf698f8f7",
            "b0a92d6a8fb30fce",
            "fd149109e03da91d",
            "b1ebb829a5e1ca1a",
            "64fb920d2cf69ea9",
            "1f5f5f58491aed43",
            "b2bcc577e6c9c540",
            "8eb49162ead0878a",
            "037267be77a0c2c0",
            "a11a82588c7271b2",
            "630d2086b39ee483",
            "f59be9ac9344722c",
            "5f436d88509d84d2",
            "607a46d3d20b4579"
        ],
        "x": 114,
        "y": 79,
        "w": 1372,
        "h": 322
    },
    {
        "id": "193df047762d6c3d",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Ping nodes",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "5af081ee292919c6",
            "4a115793fa97947c",
            "b804687eedf11df4",
            "4d18512c8d23066f",
            "d2dffb94981b7e0b",
            "cef74d9ddefe72a3",
            "45509c83c4050295",
            "cf13d066c0b57dd8",
            "bc69e6bce4f3862c",
            "81f85f93439f47f0",
            "beb7bb9db7edfa83",
            "e39209bdcf8c9f7e",
            "ea6e75af454187d9",
            "f54ddb6f839d72bd",
            "346b57f79c06a589",
            "10051fe07de608e1",
            "ff2b4b3a21dfed9c",
            "ae2fffa6ec0b3d72",
            "a07b9f020c17b790",
            "c05f3223354eb6df",
            "b4a4ffd10afd18e1",
            "8d25051fff6c6b71"
        ],
        "x": 114,
        "y": 1419,
        "w": 2352,
        "h": 162
    },
    {
        "id": "416d372a1bf6f64e",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Add webpages",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "9b6de9192151b91e",
            "04dc39754e4ea483",
            "f38c17542fb466f1",
            "7dcbbe57dd5017d3",
            "9d4e2b18d0b12c04",
            "924cccacf98b7495",
            "9c1a66773a0f6172",
            "35e5e340494fedb5",
            "1fec4bb2b36380d3",
            "7feb7b1361276e26",
            "2dbba3a62beab87a",
            "a3ce20fabd6a69b5",
            "841036fe8490164a",
            "278153c919320662",
            "e7f3d7a68e227fba",
            "edafa76a59c05215",
            "fd30e4e865d35c4b",
            "07ced5efe665ddad",
            "2d81ca95db8f7c89",
            "2347e39935ce2182",
            "76129508be2da943",
            "39f027ac0d6c506b",
            "2381bdbd806c6bb9"
        ],
        "x": 114,
        "y": 699,
        "w": 1372,
        "h": 382
    },
    {
        "id": "216f05fa3f5bf204",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Webpages detele options",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "a4369902b5e8df07",
            "986cb4c3cf5978c5",
            "592916e91855a9a6",
            "255e8d9d0276494e",
            "84d59da3cea343f3",
            "6c97c70d221f2768",
            "e6f9190b35582ec2",
            "713240bda3fccdf0",
            "f9d95b3068658814",
            "80e17443febcad48",
            "a1bcb6a0a9a2a4de",
            "2ccbf1329bfae2cc",
            "5ef12e6b84d7f406",
            "e190e039e91f9e87"
        ],
        "x": 114,
        "y": 1099,
        "w": 1632,
        "h": 182
    },
    {
        "id": "0655677491b8b65b",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Set flow.get(telegrambot+chatid) na deploy",
        "style": {
            "label": true,
            "stroke": "#3f93cf",
            "color": "#3f93cf"
        },
        "nodes": [
            "84ba71cdf4ae82e2",
            "88fa8d97ed01a35e",
            "8a6bb0c24630fb56",
            "5c6e4e15ea273f4f",
            "8b943e2fc13a8c89",
            "e7735b27bed783c8"
        ],
        "x": 114,
        "y": 1679,
        "w": 1112,
        "h": 82
    },
    {
        "id": "5bfc11d8ddf9e991",
        "type": "group",
        "z": "166b3f5d22a2184b",
        "name": "Set telegram settings",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "b15cdbd993c6e2a0",
            "146935cfdb882149",
            "f5902126afad6b5a",
            "73aca68d7ad60296",
            "1e530be405246b27",
            "7db9aaa94ecaf35f",
            "c68148ee941641dd",
            "cbcd5e464785a972",
            "05da5dc31e69d30b",
            "9e910e80179fc615",
            "b46a11b44c0ec868",
            "61628aa61cb3f639",
            "3c89a7eb8f399738",
            "00ec2250586baf7a"
        ],
        "x": 114,
        "y": 1779,
        "w": 1512,
        "h": 242
    },
    {
        "id": "a11a82588c7271b2",
        "type": "junction",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "x": 900,
        "y": 360,
        "wires": [
            [
                "f59be9ac9344722c"
            ]
        ]
    },
    {
        "id": "630d2086b39ee483",
        "type": "junction",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "x": 260,
        "y": 280,
        "wires": [
            [
                "b3f434704c543216",
                "2052df2c4f961b94",
                "53de060928284d7d",
                "05c46393987e9194",
                "3a5a77add871428c",
                "5f436d88509d84d2"
            ]
        ]
    },
    {
        "id": "f59be9ac9344722c",
        "type": "junction",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "630d2086b39ee483"
            ]
        ]
    },
    {
        "id": "07ced5efe665ddad",
        "type": "junction",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "x": 900,
        "y": 1040,
        "wires": [
            [
                "2347e39935ce2182"
            ]
        ]
    },
    {
        "id": "2d81ca95db8f7c89",
        "type": "junction",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "x": 260,
        "y": 920,
        "wires": [
            [
                "7dcbbe57dd5017d3",
                "9d4e2b18d0b12c04",
                "f38c17542fb466f1",
                "04dc39754e4ea483",
                "9b6de9192151b91e",
                "76129508be2da943",
                "39f027ac0d6c506b"
            ]
        ]
    },
    {
        "id": "2347e39935ce2182",
        "type": "junction",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "x": 260,
        "y": 1040,
        "wires": [
            [
                "2d81ca95db8f7c89"
            ]
        ]
    },
    {
        "id": "e39209bdcf8c9f7e",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "group": "dac2721519016a48",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start manual ping trigger",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "manual",
        "topicType": "str",
        "x": 250,
        "y": 1500,
        "wires": [
            [
                "5af081ee292919c6",
                "f54ddb6f839d72bd"
            ]
        ]
    },
    {
        "id": "3a5a77add871428c",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "label": "Client name",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "name",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "b82b69e0154e728e"
            ]
        ]
    },
    {
        "id": "05c46393987e9194",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "label": "Client IP",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "ip",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "b82b69e0154e728e"
            ]
        ]
    },
    {
        "id": "53de060928284d7d",
        "type": "ui_dropdown",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "label": "Ping interval",
        "tooltip": "",
        "place": "Select option",
        "group": "dac2721519016a48",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1 minute",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 minutes",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3 minutes",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4 minutes",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5 minutes",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 minutes",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20 minutes",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 30,
                "type": "num"
            },
            {
                "label": "60 minutes",
                "value": 60,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "interval",
        "topicType": "str",
        "className": "",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "b82b69e0154e728e"
            ]
        ]
    },
    {
        "id": "b3f434704c543216",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "group": "dac2721519016a48",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "save",
        "topicType": "str",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "b82b69e0154e728e"
            ]
        ]
    },
    {
        "id": "2052df2c4f961b94",
        "type": "ui_dropdown",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "label": "Telegram notify",
        "tooltip": "",
        "place": "Select option",
        "group": "dac2721519016a48",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Yes",
                "value": "yes",
                "type": "str"
            },
            {
                "label": "No",
                "value": "no",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "notification",
        "topicType": "str",
        "className": "",
        "x": 480,
        "y": 280,
        "wires": [
            [
                "b82b69e0154e728e"
            ]
        ]
    },
    {
        "id": "b82b69e0154e728e",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Set Client settings",
        "func": "let data1 = context.get(\"data1\") || null; //get from context or default to null\nlet data2 = context.get(\"data2\") || null; //get from context or default to null\nlet data3 = context.get(\"data3\") || null; //get from context or default to null\nlet data4 = context.get(\"data4\") || null; //get from context or default to null\nlet data5 = context.get(\"data5\") || null; //get from context or default to null\nlet data6 = context.get(\"data6\") || null; //get from context or default to null\n\nlet reconfig = flow.get(\"ping-clients\") || {};\nlet results = flow.get(\"ping-results\") || {};\n\nswitch (msg.topic){\n\n    case \"name\":\n        data1 = msg.payload;\n        context.set(\"data1\", data1);//store in context for next time \n        return;\n\n    case \"ip\":\n        data2 = msg.payload;\n        context.set(\"data2\", data2);//store in context for next time \n        return;\n    \n    case \"interval\":\n        data3 = msg.payload; \n        context.set(\"data3\", data3);//store in context for next time \n        return;\n\n    case \"timeout\":\n        data4 = msg.payload;    \n        context.set(\"data4\", data4); //store in context for next time \n        return;\n\n    case \"notification\":\n        data5 = msg.payload;\n        context.set(\"data5\", data5); //store in context for next time \n        return;\n        \n    case \"save\":\n        data6 = { payload: msg.topic };\n        if ((data1 !== null) && (data2 !== null) && (data3 !== null) && (data4 !== null) && (data5 !== null)) { \n            let clients = [];\n            let dev = reconfig[data2]  || {};\n            let devresults = results[data2] || {};\n            \n            dev.name = data1;\n            devresults.name = data1;\n            dev.ip = data2;\n            dev.port = \"N/A\"\n            devresults.ip = data2;\n            if (data3 > 1) {\n              dev.interval = data3 + \" minutes\";\n            } else {\n              dev.interval = data3 + \" minute\";\n            }\n            dev.intervalms = (data3 * 60000);\n            dev.timeout = data4;\n            dev.notification = data5;\n            dev.editbutton = '<button type=\"button\">Edit</button>'\n            \n            // write back\n            reconfig[data2] = dev;\n            results[data2] = devresults;\n            clients.push(dev);\n \n            flow.set(\"ping-clients\", reconfig);\n            flow.set(\"ping-results\", results);\n            context.set(\"data1\", null);\n            context.set(\"data2\", null);\n            context.set(\"data3\", null);\n            context.set(\"data4\", null);\n            context.set(\"data5\", null);\n        } else {\n            return;\n        }\n    }\n\nreturn [{ payload: Object.values(reconfig) }, msg, data6];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "2467ec7cf698f8f7"
            ],
            [
                "64fb920d2cf69ea9"
            ],
            [
                "8b5ea82d145ec4eb"
            ]
        ]
    },
    {
        "id": "8b5ea82d145ec4eb",
        "type": "delay",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 260,
        "wires": [
            [
                "13cca1c9f739cf27"
            ]
        ]
    },
    {
        "id": "13cca1c9f739cf27",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Clear",
        "func": "delete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 300,
        "wires": [
            [
                "a11a82588c7271b2"
            ]
        ]
    },
    {
        "id": "2467ec7cf698f8f7",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "b0a92d6a8fb30fce"
            ]
        ]
    },
    {
        "id": "b0a92d6a8fb30fce",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Get save location",
        "func": "let destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/ping-clients-tabel.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "fd149109e03da91d"
            ]
        ]
    },
    {
        "id": "fd149109e03da91d",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Save to file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f817febafa2e2ec9",
        "type": "inject",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "1a17beb47391b046"
            ]
        ]
    },
    {
        "id": "30ac23dad2ddc07e",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Get save location pi",
        "func": "let destination = msg.payload;\nmsg.filename = destination + \"/testPIdirectory\";\nflow.set(\"savefiledestination\", destination);\nmsg.delay = 5000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2200,
        "wires": [
            [
                "c212deb3835f4c46"
            ]
        ]
    },
    {
        "id": "48e7d2edc867c8dc",
        "type": "catch",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "",
        "scope": [
            "7ee6eacc2a5d9cd1",
            "c212deb3835f4c46"
        ],
        "uncaught": false,
        "x": 210,
        "y": 2240,
        "wires": [
            [
                "53e61568675bdbd7"
            ]
        ]
    },
    {
        "id": "e81b6e98f6523df9",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Get save location docker",
        "func": "let destination = msg.payload;\nmsg.filename = destination + \"/testDOCKERdirectory\";\nflow.set(\"savefiledestination\", destination);\nmsg.delay = 5000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2240,
        "wires": [
            [
                "d30d268db0d190ec"
            ]
        ]
    },
    {
        "id": "6f0aacad3197c943",
        "type": "catch",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "",
        "scope": [
            "082e0f0318b184c7",
            "d30d268db0d190ec"
        ],
        "uncaught": false,
        "x": 210,
        "y": 2280,
        "wires": [
            [
                "5019b114fc441426"
            ]
        ]
    },
    {
        "id": "cc2b5b71f0e2aaac",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Ping tool, Start after deploy",
        "mode": "link",
        "links": [
            "b2bcc577e6c9c540",
            "22373071c84e9b2c",
            "e7f3d7a68e227fba"
        ],
        "x": 935,
        "y": 2160,
        "wires": []
    },
    {
        "id": "5019b114fc441426",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Error find directory",
        "func": "let error = \"ERROR, directory PI and DOCKER not found\"\nflow.set(\"savefiledestination\", error);\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2280,
        "wires": [
            [
                "a0c0c0080beb4363"
            ]
        ]
    },
    {
        "id": "f0ba8d7f10def91b",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Ping tool, start UI",
        "mode": "link",
        "links": [
            "f6178536c8704c1a",
            "adc79ba653b9050f",
            "cf81bc155ba0dcde",
            "8a6bb0c24630fb56"
        ],
        "x": 1435,
        "y": 2280,
        "wires": []
    },
    {
        "id": "a0c0c0080beb4363",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "reset delay",
        "func": "delete msg.delay;\ndelete msg.error;\nmsg.reset = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2280,
        "wires": [
            [
                "9c57b09a4fcc718f"
            ]
        ]
    },
    {
        "id": "9c57b09a4fcc718f",
        "type": "delay",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1300,
        "y": 2280,
        "wires": [
            [
                "f0ba8d7f10def91b"
            ]
        ]
    },
    {
        "id": "1a17beb47391b046",
        "type": "http request",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:1880/settings",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 2160,
        "wires": [
            [
                "f3877b34982a22dc"
            ]
        ]
    },
    {
        "id": "f3877b34982a22dc",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 2160,
        "wires": [
            [
                "da6d4389bb110713"
            ]
        ]
    },
    {
        "id": "da6d4389bb110713",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Get version",
        "func": "flow.set(\"NoderedVersion\",msg.payload.version);\nmsg.payload = new(Date);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2160,
        "wires": [
            [
                "cc2b5b71f0e2aaac",
                "45204b9d5854f8c8"
            ]
        ]
    },
    {
        "id": "c212deb3835f4c46",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "V3 Pi, test directory exists",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1030,
        "y": 2200,
        "wires": [
            [
                "9c57b09a4fcc718f"
            ]
        ]
    },
    {
        "id": "d30d268db0d190ec",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "V3 Docker, test directory exists",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1050,
        "y": 2240,
        "wires": [
            [
                "9c57b09a4fcc718f"
            ]
        ]
    },
    {
        "id": "4a9dcdcb6ce78c42",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 2380,
        "wires": [
            [
                "5cdab53b1f50821a"
            ]
        ]
    },
    {
        "id": "6c339e319be6d740",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "flow.set ping-clients",
        "func": "let store =  msg.payload;\nflow.set(\"ping-clients\", store);\nreturn [{payload:Object.values(store)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 2380,
        "wires": [
            [
                "d3702ba43792c8ae"
            ]
        ]
    },
    {
        "id": "5cdab53b1f50821a",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Payload2Object",
        "func": "let store = msg.payload;\nlet msg2 = Object.assign({}, store);\nreturn [{payload:(msg2)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2380,
        "wires": [
            [
                "160c0d2d17742351"
            ]
        ]
    },
    {
        "id": "160c0d2d17742351",
        "type": "split",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1030,
        "y": 2380,
        "wires": [
            [
                "e95df38e60553db0"
            ]
        ]
    },
    {
        "id": "e95df38e60553db0",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "client2topic",
        "func": "let value = msg.payload.ip\nmsg.topic = value;\n\nlet results = flow.get(\"ping-results\") || {};\nlet devresults = results[value] || {};\ndevresults.name = msg.payload.name;\ndevresults.ip = msg.payload.ip;\n// write back\nresults[value] = devresults;\nflow.set(\"ping-results\", results);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2380,
        "wires": [
            [
                "539a91ea417f7510"
            ]
        ]
    },
    {
        "id": "539a91ea417f7510",
        "type": "join",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1370,
        "y": 2380,
        "wires": [
            [
                "6c339e319be6d740"
            ]
        ]
    },
    {
        "id": "d3702ba43792c8ae",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Ping tool, Restore client table (read file)",
        "mode": "link",
        "links": [
            "df48d70d959be24f"
        ],
        "x": 1715,
        "y": 2380,
        "wires": []
    },
    {
        "id": "1c6719532fd813a9",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Get save location",
        "func": "delete msg.payload;\nlet destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/ping-clients-tabel.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2380,
        "wires": [
            [
                "f38c0c07b19553f2"
            ]
        ]
    },
    {
        "id": "adc79ba653b9050f",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Ping tool, start UI",
        "links": [
            "f0ba8d7f10def91b"
        ],
        "x": 155,
        "y": 2380,
        "wires": [
            [
                "1c6719532fd813a9",
                "4b7304f5dc110112"
            ]
        ]
    },
    {
        "id": "f38c0c07b19553f2",
        "type": "file in",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Read backup",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 2380,
        "wires": [
            [
                "4a9dcdcb6ce78c42"
            ]
        ]
    },
    {
        "id": "b1ebb829a5e1ca1a",
        "type": "inject",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "clear backup file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 980,
        "y": 140,
        "wires": [
            [
                "b0a92d6a8fb30fce"
            ]
        ]
    },
    {
        "id": "55e1c2243ed9a00b",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Prepare for device table",
        "func": "let devs = flow.get(\"ping-clients\") || {};\nreturn [{payload:Object.values(devs)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "5a2e9fa3a8e436cf"
            ]
        ]
    },
    {
        "id": "5a2e9fa3a8e436cf",
        "type": "ui_table",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "group": "dac2721519016a48",
        "name": "Ping clients tabel",
        "order": 7,
        "width": 18,
        "height": 7,
        "columns": [
            {
                "field": "editbutton",
                "title": "Edit",
                "width": "7%",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "26%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ip",
                "title": "ip address",
                "width": "15%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "interval",
                "title": "ping interval",
                "width": "15%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timeout",
                "title": "max. timeouts",
                "width": "14%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "notification",
                "title": "notification",
                "width": "13%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Remove",
                "width": "10%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "412fdfce20f6c852"
            ]
        ]
    },
    {
        "id": "412fdfce20f6c852",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Prefix for asking del?",
        "func": "if (msg.topic === \"del\") {\n    flow.set(\"delbuffer\", msg.payload)\n    \n    msg.topic = \"Client ping tabel: Delete \" + msg.payload.name + \" client?\";\n    msg.payload = \"Do you want to remove this device out the client ping list?\"\nreturn [msg, null, null];    \n}\n\nif (msg.topic ===\"editbutton\") {\n    return [null, msg, null];    \n}\n\n\nmsg.topic = msg.payload.name + \" (ip:\" + msg.payload.ip + \")\";\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn [null, null, msg];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "3df003875fb9111e"
            ],
            [
                "f6f61561ea7be543"
            ],
            [
                "f2af0375bf07a2e1"
            ]
        ]
    },
    {
        "id": "3df003875fb9111e",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "Remove",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Del asking pop-up",
        "x": 770,
        "y": 520,
        "wires": [
            [
                "69eb201b72270016"
            ]
        ]
    },
    {
        "id": "69eb201b72270016",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Del in client ping tabel",
        "func": "if (msg.payload === \"Cancel\"){\n    flow.set(\"delbuffer\", \"\");\n    return;\n} else {\n    let clients = flow.get(\"ping-clients\") || {};\n    let results = flow.get(\"ping-results\") || {};\n    let remove = flow.get(\"delbuffer\")   \n\n    delete clients[remove.ip];\n    delete results[remove.ip];\n    \n    msg.topic = \"Removing client from list.\"\n    msg.payload = remove.name + \", is removed from client ping list.\";\n\n    let reconfig = flow.get(\"ping-clients\") || {}\n    flow.set(\"delbuffer\", \"\");\n    return [msg,{payload:Object.values(reconfig)}];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            [
                "e42a7372272aca21",
                "ee549fc8a0f25068"
            ],
            [
                "68a3faa121e42b70"
            ]
        ]
    },
    {
        "id": "f2af0375bf07a2e1",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Show detail info",
        "x": 760,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e42a7372272aca21",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Client Device Info",
        "x": 1270,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ee549fc8a0f25068",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Ping tool, Restore in (client ping table)",
        "mode": "link",
        "links": [
            "df48d70d959be24f",
            "bc69e6bce4f3862c",
            "eaf9b1c9009f05e7"
        ],
        "x": 1195,
        "y": 480,
        "wires": []
    },
    {
        "id": "df48d70d959be24f",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Ping tool, restore client table out",
        "links": [
            "ee549fc8a0f25068",
            "64fb920d2cf69ea9",
            "d3702ba43792c8ae"
        ],
        "x": 155,
        "y": 460,
        "wires": [
            [
                "55e1c2243ed9a00b"
            ]
        ]
    },
    {
        "id": "68a3faa121e42b70",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "9f7143fbd1c1a75c"
            ]
        ]
    },
    {
        "id": "ef2ad954ed0f8af4",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Save to file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1650,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "9f7143fbd1c1a75c",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Get save location",
        "func": "let destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/ping-clients-tabel.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 560,
        "wires": [
            [
                "ef2ad954ed0f8af4"
            ]
        ]
    },
    {
        "id": "64fb920d2cf69ea9",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Ping tool, Restore client table",
        "mode": "link",
        "links": [
            "df48d70d959be24f"
        ],
        "x": 975,
        "y": 220,
        "wires": []
    },
    {
        "id": "1f5f5f58491aed43",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Edit",
        "func": "let data1 = { payload: msg.payload.name };\nlet data2 = { payload: msg.payload.ip };\nlet data3 = { payload: (msg.payload.intervalms / 60000) };\nlet data4 = { payload: msg.payload.timeout };\nlet data5 = { payload: msg.payload.notification };\nreturn [data1, data2, data3, data4, data5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 180,
        "wires": [
            [
                "3a5a77add871428c"
            ],
            [
                "05c46393987e9194"
            ],
            [
                "53de060928284d7d"
            ],
            [
                "5f436d88509d84d2"
            ],
            [
                "2052df2c4f961b94"
            ]
        ]
    },
    {
        "id": "7aa9923868d01e2a",
        "type": "comment",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "Wat aanpassen bij een nieuwe release",
        "info": "- Node \"SCRIPT VERSION\", de versie in aanpassen.\n",
        "x": 290,
        "y": 2720,
        "wires": []
    },
    {
        "id": "9722819796be57a5",
        "type": "comment",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "Welke modules installeren voor deze flow",
        "info": "Via manage pallette, onderstaande modules toevoegen\n- node-red-dashboard\n- node-red-node-ui-table",
        "x": 300,
        "y": 2760,
        "wires": []
    },
    {
        "id": "c780f69af990ac7d",
        "type": "ui_text",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "group": "dac2721519016a48",
        "order": 1,
        "width": 24,
        "height": 2,
        "name": "Top text info tab",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 760,
        "y": 2640,
        "wires": []
    },
    {
        "id": "29c4cf9aed2e18db",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "get file location",
        "func": "let location = flow.get(\"savefiledestination\")\nmsg.payload = \"<center>Data save folder: \" + location + \"</center>\"\nmsg.topic = \"Actuel version: <b>V1_18-05-2023_R1</b>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2620,
        "wires": [
            [
                "797f472cbb68e6b5"
            ]
        ]
    },
    {
        "id": "678b138e5c386f71",
        "type": "comment",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "Save data locaties",
        "info": "Native system:\n/home/pi/domoticz/plugins/ping-tool\n\nDocker system:\n/data/saved-files/ping-tool",
        "x": 230,
        "y": 2800,
        "wires": []
    },
    {
        "id": "cf81bc155ba0dcde",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "Ping tool, start UI text bar",
        "links": [
            "f0ba8d7f10def91b"
        ],
        "x": 155,
        "y": 2620,
        "wires": [
            [
                "29c4cf9aed2e18db"
            ]
        ]
    },
    {
        "id": "ca90baf0a86dc3c2",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "start after deploy",
        "func": "let location = \"please wait, loading config\"\nmsg.payload = \"Data save folder: \" + location\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2660,
        "wires": [
            [
                "797f472cbb68e6b5"
            ]
        ]
    },
    {
        "id": "797f472cbb68e6b5",
        "type": "change",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "SCRIPT VERSION",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Actual ping-tool version: V1_12-05-2024_R1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2640,
        "wires": [
            [
                "c780f69af990ac7d"
            ]
        ]
    },
    {
        "id": "22373071c84e9b2c",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "562046fbd09ca898",
        "name": "Ping tool, startup",
        "links": [
            "cc2b5b71f0e2aaac"
        ],
        "x": 155,
        "y": 2660,
        "wires": [
            [
                "ca90baf0a86dc3c2"
            ]
        ]
    },
    {
        "id": "53e61568675bdbd7",
        "type": "change",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Docker file save location",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/data/saved-files/ping-tool",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 2240,
        "wires": [
            [
                "e81b6e98f6523df9",
                "a0c0c0080beb4363"
            ]
        ]
    },
    {
        "id": "45204b9d5854f8c8",
        "type": "change",
        "z": "166b3f5d22a2184b",
        "g": "2ee78d8d65f6b35e",
        "name": "Pi file save location",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/home/pi/domoticz/plugins/ping-tool",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2200,
        "wires": [
            [
                "30ac23dad2ddc07e"
            ]
        ]
    },
    {
        "id": "b2bcc577e6c9c540",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Ping tool, clear on start",
        "links": [
            "cc2b5b71f0e2aaac"
        ],
        "x": 695,
        "y": 280,
        "wires": [
            [
                "13cca1c9f739cf27"
            ]
        ]
    },
    {
        "id": "8eb49162ead0878a",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "group": "dac2721519016a48",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "clear",
        "topicType": "str",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "13cca1c9f739cf27"
            ]
        ]
    },
    {
        "id": "5af081ee292919c6",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Filter ping clients",
        "func": "let d = new Date();\nlet clients = flow.get(\"ping-clients\") || {};\nlet results = flow.get(\"ping-results\") || {};\nlet clientslength = Object.keys(clients).length;\nlet resultslength = Object.keys(results).length;\nlet manualtopic;\n\nif (msg.topic === \"manual\") {\n    manualtopic = true;\n} else {\n    manualtopic = false;\n}\n\nfor (let i = 0; i < clientslength; i++) {\n    let clientkeys = Object.keys(clients);\n    let clientIDkey = clientkeys[i];\n    let client = clients[clientIDkey] || {};\n\n    let intervalms = client.intervalms;\n    let timestampms;\n    \n    for (let i = 0; i < resultslength; i++) {\n        let resultkeys = Object.keys(results);\n        let resultIDkey = resultkeys[i];\n\n        if (client.ip === resultIDkey) {\n            if (results[client.ip].hasOwnProperty(\"timestampms\")) {\n                timestampms = results[client.ip].timestampms;\n                \n            } else {\n                timestampms = 0;\n            }\n              \n            if ((d.getTime() - timestampms > intervalms) || (manualtopic === true)) {\n                msg.topic = client.ip;\n                msg.settings = client;\n                msg.payload = [\n                    {\n                        \"name\": client.name,\n                        \"host\": client.ip,\n                        \"port\": client.port\n                    },\n                ]\n                node.send(msg);\n            } \n        }\n    }    \n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1460,
        "wires": [
            [
                "ff2b4b3a21dfed9c"
            ]
        ]
    },
    {
        "id": "4a115793fa97947c",
        "type": "inject",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1460,
        "wires": [
            [
                "5af081ee292919c6",
                "f54ddb6f839d72bd"
            ]
        ]
    },
    {
        "id": "b804687eedf11df4",
        "type": "ping",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "mode": "triggered",
        "name": "",
        "host": "",
        "timer": "20",
        "inputs": 1,
        "x": 1090,
        "y": 1460,
        "wires": [
            [
                "4d18512c8d23066f"
            ]
        ]
    },
    {
        "id": "4d18512c8d23066f",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "StoreResults",
        "func": "let pingResults = flow.get(\"ping-results\") || {}\nlet thisPing = pingResults[msg.topic] || {};\nlet success = msg.payload !== false && msg.payload >= 0;\nvar error; \nvar msgerror;\nvar time;\n\n\nvar d=new Date();\nvar hours=d.getHours();\nvar minutes=d.getMinutes();\nif (hours <= 9) {\n    if (minutes <= 9) {\n        minutes = (\"0\" + minutes);\n        time = (\"0\" + hours + \":\" + minutes)\n    } else {\n        time = (\"0\" + hours + \":\" + minutes)\n    }\n}else{\n    if (minutes <= 9) {\n        minutes = (\"0\" + minutes);\n        time = (hours + \":\" + minutes)\n    } else {\n        time = (hours + \":\" + minutes)\n    }\n}\n        \nif (thisPing.error!==undefined) {\n    if(isNaN(thisPing.error)) {\n        thisPing.error = 0;\n    }\n    error = thisPing.error + 1;\n}\nif (thisPing.error===undefined) {\n    error = success ? 0 : 1 ;\n}\nif (thisPing.telegram===undefined) {\n    thisPing.telegram = \"standby\"\n}\n\nthisPing.name = msg.ping.name;\nthisPing.port = msg.ping.port;\nthisPing.timestamp= success ? time : thisPing.timestamp ;\nthisPing.timestampms = d.getTime();\nthisPing.interval = msg.settings.interval;\nthisPing.timeout = msg.settings.timeout;\nthisPing.notification = msg.settings.notification;\nthisPing.responseTime = success ? msg.payload : null;\nthisPing.state = success ? true : false ;\nthisPing.error = success ? 0 : error ; \n\n\npingResults[msg.topic] = thisPing;//store ping obj in pingResults\nflow.set(\"ping-results\",pingResults);//save pingResults in flow context\n\nmsg.payload = thisPing;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1460,
        "wires": [
            [
                "d2dffb94981b7e0b",
                "ae2fffa6ec0b3d72"
            ]
        ]
    },
    {
        "id": "d2dffb94981b7e0b",
        "type": "delay",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 1540,
        "wires": [
            [
                "cef74d9ddefe72a3"
            ]
        ]
    },
    {
        "id": "cef74d9ddefe72a3",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Prepare for table",
        "func": "let devs = flow.get(\"ping-results\") || {};\nreturn [{payload:Object.values(devs)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1540,
        "wires": [
            [
                "45509c83c4050295"
            ]
        ]
    },
    {
        "id": "45509c83c4050295",
        "type": "change",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"name\",\"field\":\"name\",\"width\":\"21.75%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"ip-address\",\"field\":\"ip\",\"width\":\"10%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"port\",\"field\":\"port\",\"width\":\"6%\",\"align\":\"center\"},{\"formatterParams\":{\"allowEmpty\":true,\"allowTruthy\":true,\"tickElement\":\"<i class='fa fa-check'></i>\",\"crossElement\":\"<i class='fa fa-times'></i>\"},\"title\":\"status\",\"field\":\"state\",\"formatter\":\"tickCross\",\"width\":\"6%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"response (ms)\",\"field\":\"responseTime\",\"width\":\"10%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"timeout counter\",\"field\":\"error\",\"width\":\"11%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"timeout setup\",\"field\":\"timeout\",\"width\":\"10%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"last ping\",\"field\":\"timestamp\",\"width\":\"8%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"ping interval\",\"field\":\"interval\",\"width\":\"10%\",\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"telegram\",\"field\":\"telegram\",\"width\":\"8%\",\"align\":\"center\"}],\"rowFormatter\":\"function(row) { var data = row.getData(); if(data.error > 0) {row.getElement().style.backgroundColor = '#FF0000';} }\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 1540,
        "wires": [
            [
                "cf13d066c0b57dd8"
            ]
        ]
    },
    {
        "id": "cf13d066c0b57dd8",
        "type": "ui_table",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "group": "dac2721519016a48",
        "name": "",
        "order": 4,
        "width": 24,
        "height": 10,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 1990,
        "y": 1540,
        "wires": [
            [
                "c05f3223354eb6df"
            ]
        ]
    },
    {
        "id": "bc69e6bce4f3862c",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Ping tool, update table",
        "links": [
            "ee549fc8a0f25068",
            "713240bda3fccdf0"
        ],
        "x": 1325,
        "y": 1540,
        "wires": [
            [
                "cef74d9ddefe72a3"
            ]
        ]
    },
    {
        "id": "81f85f93439f47f0",
        "type": "http request",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1970,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "beb7bb9db7edfa83",
        "type": "change",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1500,
        "wires": [
            [
                "81f85f93439f47f0"
            ]
        ]
    },
    {
        "id": "037267be77a0c2c0",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "Ping tool, edit",
        "links": [
            "f6f61561ea7be543"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "1f5f5f58491aed43"
            ]
        ]
    },
    {
        "id": "f6f61561ea7be543",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "5648f39f55395f07",
        "name": "Ping tool, edit",
        "mode": "link",
        "links": [
            "037267be77a0c2c0"
        ],
        "x": 655,
        "y": 540,
        "wires": []
    },
    {
        "id": "5f436d88509d84d2",
        "type": "ui_dropdown",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "",
        "label": "max. timeouts",
        "tooltip": "",
        "place": "Select option",
        "group": "dac2721519016a48",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6",
                "value": 6,
                "type": "num"
            },
            {
                "label": "7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timeout",
        "topicType": "str",
        "className": "",
        "x": 480,
        "y": 240,
        "wires": [
            [
                "b82b69e0154e728e"
            ]
        ]
    },
    {
        "id": "9b6de9192151b91e",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "label": "Webpage name.",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "name",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "04dc39754e4ea483",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "label": "Webpage IP.",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "ip",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 490,
        "y": 800,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "f38c17542fb466f1",
        "type": "ui_dropdown",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "label": "Ping interval.",
        "tooltip": "",
        "place": "Select option",
        "group": "dac2721519016a48",
        "order": 19,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1 minute",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 minutes",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3 minutes",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4 minutes",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5 minutes",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 minutes",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20 minutes",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 30,
                "type": "num"
            },
            {
                "label": "60 minutes",
                "value": 60,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "interval",
        "topicType": "str",
        "className": "",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "7dcbbe57dd5017d3",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "group": "dac2721519016a48",
        "order": 22,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Save.",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "save",
        "topicType": "str",
        "x": 510,
        "y": 1000,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "9d4e2b18d0b12c04",
        "type": "ui_dropdown",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "label": "Telegram notify.",
        "tooltip": "",
        "place": "Select option",
        "group": "dac2721519016a48",
        "order": 21,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Yes",
                "value": "yes",
                "type": "str"
            },
            {
                "label": "No",
                "value": "no",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "notification",
        "topicType": "str",
        "className": "",
        "x": 480,
        "y": 960,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "924cccacf98b7495",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Set webpage settings",
        "func": "let data1 = context.get(\"data1\") || null; //get from context or default to null\nlet data2 = context.get(\"data2\") || null; //get from context or default to null\nlet data3 = context.get(\"data3\") || null; //get from context or default to null\nlet data4 = context.get(\"data4\") || null; //get from context or default to null\nlet data5 = context.get(\"data5\") || null; //get from context or default to null\nlet data6 = context.get(\"data6\") || null; //get from context or default to null\nlet data7 = context.get(\"data7\") || null; //get from context or default to null\n\nlet reconfig = flow.get(\"ping-webpage\") || {};\nlet results = flow.get(\"ping-results\") || {};\n\nswitch (msg.topic){\n\n    case \"name\":\n        data1 = msg.payload;\n        context.set(\"data1\", data1);//store in context for next time \n        return;\n\n    case \"ip\":\n        data2 = msg.payload;\n        context.set(\"data2\", data2);//store in context for next time \n        return;\n    \n    case \"port\":\n        data3 = msg.payload;\n        context.set(\"data3\", data3);//store in context for next time \n        return;\n\n    case \"interval\":\n        data4 = msg.payload; \n        context.set(\"data4\", data4);//store in context for next time \n        return;\n\n    case \"timeout\":\n        data5 = msg.payload;    \n        context.set(\"data5\", data5); //store in context for next time \n        return;\n\n    case \"notification\":\n        data6 = msg.payload;\n        context.set(\"data6\", data6); //store in context for next time \n        return;\n        \n    case \"save\":\n        data7 = { payload: msg.topic };\n        if ((data1 !== null) && (data2 !== null) && (data3 !== null) && (data4 !== null) && (data5 !== null) && (data6 !== null)) { \n            let clients = [];\n            let dev = reconfig[data2]  || {};\n            let devresults = results[data2] || {};\n            \n            dev.name = data1;\n            devresults.name = data1;\n            dev.ip = data2;\n            devresults.ip = data2;\n            dev.port = data3;\n            devresults.port = data3;\n            if (data4 > 1) {\n              dev.interval = data4 + \" minutes\";\n            } else {\n              dev.interval = data4 + \" minute\";\n            }\n            dev.intervalms = (data4 * 60000);\n            dev.timeout = data5;\n            dev.notification = data6;\n            dev.editbutton = '<button type=\"button\">Edit</button>'\n            \n            // write back\n            let url = data2 + \"-\" + data3;\n            reconfig[url] = dev;\n            results[url] = devresults;\n            clients.push(dev);\n \n            flow.set(\"ping-webpage\", reconfig);\n            flow.set(\"ping-results\", results);\n            context.set(\"data1\", null);\n            context.set(\"data2\", null);\n            context.set(\"data3\", null);\n            context.set(\"data4\", null);\n            context.set(\"data5\", null);\n            context.set(\"data6\", null);\n        } else {\n            return;\n        }\n    }\n\nreturn [{payload:Object.values(reconfig)},msg, data7];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 840,
        "wires": [
            [
                "1fec4bb2b36380d3"
            ],
            [
                "841036fe8490164a"
            ],
            [
                "9c1a66773a0f6172"
            ]
        ]
    },
    {
        "id": "9c1a66773a0f6172",
        "type": "delay",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 900,
        "wires": [
            [
                "35e5e340494fedb5"
            ]
        ]
    },
    {
        "id": "35e5e340494fedb5",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Clear",
        "func": "delete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 940,
        "wires": [
            [
                "07ced5efe665ddad"
            ]
        ]
    },
    {
        "id": "1fec4bb2b36380d3",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 820,
        "wires": [
            [
                "7feb7b1361276e26"
            ]
        ]
    },
    {
        "id": "7feb7b1361276e26",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Get save location",
        "func": "let destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/ping-webpage-tabel.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 820,
        "wires": [
            [
                "2dbba3a62beab87a"
            ]
        ]
    },
    {
        "id": "2dbba3a62beab87a",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Save to file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1390,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "a3ce20fabd6a69b5",
        "type": "inject",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "clear backup file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 980,
        "y": 780,
        "wires": [
            [
                "7feb7b1361276e26"
            ]
        ]
    },
    {
        "id": "841036fe8490164a",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Ping tool, Restore webpage table",
        "mode": "link",
        "links": [
            "f9d95b3068658814"
        ],
        "x": 975,
        "y": 860,
        "wires": []
    },
    {
        "id": "278153c919320662",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Edit",
        "func": "let data1 = { payload: msg.payload.name };\nlet data2 = { payload: msg.payload.ip };\nlet data3 = { payload: msg.payload.port };\nlet data4 = { payload: (msg.payload.intervalms / 60000) };\nlet data5 = { payload: msg.payload.timeout };\nlet data6 = { payload: msg.payload.notification };\nreturn [data1, data2, data3, data4, data5, data6];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 820,
        "wires": [
            [
                "9b6de9192151b91e"
            ],
            [
                "04dc39754e4ea483"
            ],
            [
                "39f027ac0d6c506b"
            ],
            [
                "f38c17542fb466f1"
            ],
            [
                "76129508be2da943"
            ],
            [
                "9d4e2b18d0b12c04"
            ]
        ]
    },
    {
        "id": "e7f3d7a68e227fba",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Ping tool, clear on start",
        "links": [
            "cc2b5b71f0e2aaac"
        ],
        "x": 695,
        "y": 920,
        "wires": [
            [
                "35e5e340494fedb5"
            ]
        ]
    },
    {
        "id": "edafa76a59c05215",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "group": "dac2721519016a48",
        "order": 23,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear.",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "clear",
        "topicType": "str",
        "x": 510,
        "y": 1040,
        "wires": [
            [
                "35e5e340494fedb5"
            ]
        ]
    },
    {
        "id": "fd30e4e865d35c4b",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "Ping tool, edit",
        "links": [
            "5ef12e6b84d7f406"
        ],
        "x": 155,
        "y": 820,
        "wires": [
            [
                "278153c919320662"
            ]
        ]
    },
    {
        "id": "76129508be2da943",
        "type": "ui_dropdown",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "label": "max. timeouts.",
        "tooltip": "",
        "place": "Select option",
        "group": "dac2721519016a48",
        "order": 20,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6",
                "value": 6,
                "type": "num"
            },
            {
                "label": "7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timeout",
        "topicType": "str",
        "className": "",
        "x": 480,
        "y": 920,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "39f027ac0d6c506b",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "",
        "label": "Webpage port.",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "port",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 480,
        "y": 840,
        "wires": [
            [
                "924cccacf98b7495"
            ]
        ]
    },
    {
        "id": "2381bdbd806c6bb9",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "416d372a1bf6f64e",
        "name": "clear line..",
        "group": "dac2721519016a48",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Setup webpages to ping",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#E6E6E6",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "607a46d3d20b4579",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "d663ded32689f05e",
        "name": "clear line.",
        "group": "dac2721519016a48",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Setup ip-address to ping",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#E6E6E6",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a4369902b5e8df07",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Prepare for device table",
        "func": "let devs = flow.get(\"ping-webpage\") || {};\nreturn [{payload:Object.values(devs)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "986cb4c3cf5978c5"
            ]
        ]
    },
    {
        "id": "986cb4c3cf5978c5",
        "type": "ui_table",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "group": "dac2721519016a48",
        "name": "Ping webpage tabel",
        "order": 16,
        "width": 18,
        "height": 8,
        "columns": [
            {
                "field": "editbutton",
                "title": "Edit",
                "width": "7%",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "18%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ip",
                "title": "ip address",
                "width": "15%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "port",
                "title": "port",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "interval",
                "title": "ping interval",
                "width": "15%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timeout",
                "title": "max. timeouts",
                "width": "14%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "notification",
                "title": "notification",
                "width": "13%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Remove",
                "width": "10%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 770,
        "y": 1160,
        "wires": [
            [
                "592916e91855a9a6"
            ]
        ]
    },
    {
        "id": "592916e91855a9a6",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Prefix for asking del?",
        "func": "if (msg.topic === \"del\") {\n    flow.set(\"delbuffer\", msg.payload)\n    \n    msg.topic = \"Client ping tabel: Delete \" + msg.payload.name + \" client?\";\n    msg.payload = \"Do you want to remove this device out the client ping list?\"\nreturn [msg, null, null];    \n}\n\nif (msg.topic ===\"editbutton\") {\n    return [null, msg, null];    \n}\n\n\nmsg.topic = msg.payload.name + \" (ip:\" + msg.payload.ip + \":\" + msg.payload.port + \")\";\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn [null, null, msg];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "255e8d9d0276494e"
            ],
            [
                "5ef12e6b84d7f406"
            ],
            [
                "6c97c70d221f2768"
            ]
        ]
    },
    {
        "id": "255e8d9d0276494e",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "Remove",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Del asking pop-up",
        "x": 770,
        "y": 1200,
        "wires": [
            [
                "84d59da3cea343f3"
            ]
        ]
    },
    {
        "id": "84d59da3cea343f3",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Del in webpage ping tabel",
        "func": "if (msg.payload === \"Cancel\"){\n    flow.set(\"delbuffer\", \"\");\n    return;\n} else {\n    let webpage = flow.get(\"ping-webpage\") || {};\n    let results = flow.get(\"ping-results\") || {};\n    let remove = flow.get(\"delbuffer\")   \n\n    delete webpage[remove.ip + \"-\" + remove.port];\n    delete results[remove.ip + \"-\" + remove.port];\n    \n    msg.topic = \"Removing webpage from list.\"\n    msg.payload = remove.name + \", is removed from webpage ping list.\";\n\n    let reconfig = flow.get(\"ping-webpage\") || {}\n    flow.set(\"delbuffer\", \"\");\n    return [msg,{payload:Object.values(reconfig)}];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1220,
        "wires": [
            [
                "e6f9190b35582ec2",
                "713240bda3fccdf0"
            ],
            [
                "80e17443febcad48"
            ]
        ]
    },
    {
        "id": "6c97c70d221f2768",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Show detail info",
        "x": 760,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "e6f9190b35582ec2",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Webpage Device Info",
        "x": 1280,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "713240bda3fccdf0",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Ping tool, Restore in (client ping table)",
        "mode": "link",
        "links": [
            "f9d95b3068658814",
            "bc69e6bce4f3862c",
            "eaf9b1c9009f05e7"
        ],
        "x": 1195,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f9d95b3068658814",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Ping tool, restore webpage table out",
        "links": [
            "c38f40f199c20a55",
            "713240bda3fccdf0",
            "841036fe8490164a"
        ],
        "x": 155,
        "y": 1140,
        "wires": [
            [
                "a4369902b5e8df07"
            ]
        ]
    },
    {
        "id": "80e17443febcad48",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1230,
        "y": 1240,
        "wires": [
            [
                "2ccbf1329bfae2cc"
            ]
        ]
    },
    {
        "id": "a1bcb6a0a9a2a4de",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Save to file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1650,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "2ccbf1329bfae2cc",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Get save location",
        "func": "let destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/ping-webpage-tabel.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1240,
        "wires": [
            [
                "a1bcb6a0a9a2a4de"
            ]
        ]
    },
    {
        "id": "5ef12e6b84d7f406",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "Ping tool, edit",
        "mode": "link",
        "links": [
            "fd30e4e865d35c4b"
        ],
        "x": 655,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ea6e75af454187d9",
        "type": "http request",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1500,
        "wires": [
            [
                "346b57f79c06a589"
            ]
        ]
    },
    {
        "id": "f54ddb6f839d72bd",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Filter ping webpages",
        "func": "let d = new Date();\nlet webpages = flow.get(\"ping-webpage\") || {};\nlet results = flow.get(\"ping-results\") || {};\nlet webpageslength = Object.keys(webpages).length;\nlet resultslength = Object.keys(results).length;\nlet manualtopic;\n\nif (msg.topic === \"manual\") {\n    manualtopic = true;\n} else {\n    manualtopic = false;\n}\n\nfor (let i = 0; i < webpageslength; i++) {\n    let webpagekeys = Object.keys(webpages);\n    let webpageIDkey = webpagekeys[i];\n    let webpage = webpages[webpageIDkey] || {};\n\n    let intervalms = webpage.intervalms;\n    let timestampms;\n\n    for (let i = 0; i < resultslength; i++) {\n        let resultkeys = Object.keys(results);\n        let resultIDkey = resultkeys[i];\n\n        if (webpage.ip + \"-\" + webpage.port === resultIDkey) {\n            if (results[webpage.ip + \"-\" + webpage.port].hasOwnProperty(\"timestampms\")) {\n                timestampms = results[webpage.ip + \"-\" + webpage.port].timestampms;\n\n            } else {\n                timestampms = 0;\n            }\n            if (manualtopic) {\n                timestampms = 0;\n            }\n\n            if ((d.getTime() - timestampms > intervalms) || (manualtopic === true)) {\n                msg.topic = webpage.ip + \"-\" + webpage.port;\n                msg.name = webpage.name;\n                msg.settings = webpage;\n                msg.payload = [\n                    {\n                        \"name\": webpage.name,\n                        \"host\": webpage.ip + \":\" + webpage.port,\n                        \"timeout\": webpage.timeout\n                    },\n                ]\n                msg.url = webpage.ip + \":\" + webpage.port\n                node.send(msg);\n            }\n        }\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1500,
        "wires": [
            [
                "10051fe07de608e1"
            ]
        ]
    },
    {
        "id": "346b57f79c06a589",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "StoreResults",
        "func": "let pingResults = flow.get(\"ping-results\") || {}\nlet thisPing = pingResults[msg.topic] || {};\nlet success = msg.payload !== false && msg.payload >= 0;\nvar error; \nvar msgerror;\nvar showtime;\nvar time;\nvar state;\n\nvar d=new Date();\nvar hours=d.getHours();\nvar minutes=d.getMinutes();\nif (hours <= 9) {\n    if (minutes <= 9) {\n        minutes = (\"0\" + minutes);\n        time = (\"0\" + hours + \":\" + minutes)\n    } else {\n        time = (\"0\" + hours + \":\" + minutes)\n    }\n}else{\n    if (minutes <= 9) {\n        minutes = (\"0\" + minutes);\n        time = (hours + \":\" + minutes)\n    } else {\n        time = (hours + \":\" + minutes)\n    }\n}\n        \nif (thisPing.error!==undefined) {\n    if(isNaN(thisPing.error)) {\n        thisPing.error = 0;\n    }\n}\nif (thisPing.telegram===undefined) {\n    thisPing.telegram = \"standby\"\n}\nvar statetrue\nif (msg.statusCode === 200) {\n  state = true;\n  error = 0;\n  showtime = time\n} else {\n  state =  false;\n  error = thisPing.error +1;\n  showtime = thisPing.timestamp;\n}\nthisPing.name = msg.name\nthisPing.timestamp= showtime ;\nthisPing.timestampms = d.getTime();\nthisPing.interval = msg.settings.interval;\nthisPing.timeout = msg.settings.timeout;\nthisPing.notification = msg.settings.notification;\nthisPing.responseTime = (d.getTime() - msg.startping);\nthisPing.state = state;\nthisPing.error = error ; \n\npingResults[msg.topic] = thisPing;//store ping obj in pingResults\nflow.set(\"ping-results\",pingResults);//save pingResults in flow context\n\nmsg.payload = thisPing;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1500,
        "wires": [
            [
                "d2dffb94981b7e0b",
                "a07b9f020c17b790"
            ]
        ]
    },
    {
        "id": "10051fe07de608e1",
        "type": "delay",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1500,
        "wires": [
            [
                "8d25051fff6c6b71"
            ]
        ]
    },
    {
        "id": "ff2b4b3a21dfed9c",
        "type": "delay",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1460,
        "wires": [
            [
                "b804687eedf11df4"
            ]
        ]
    },
    {
        "id": "e190e039e91f9e87",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "216f05fa3f5bf204",
        "name": "clear line",
        "group": "dac2721519016a48",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "",
        "tooltip": "Ping list of clients and webpages",
        "color": "#000000",
        "bgcolor": "#E6E6E6",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "b0ccc9f9559fe1b1",
        "type": "file in",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Read backup",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 2420,
        "wires": [
            [
                "d9ade764157951c1"
            ]
        ]
    },
    {
        "id": "4b7304f5dc110112",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Get save location",
        "func": "delete msg.payload;\nlet destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/ping-webpage-tabel.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2420,
        "wires": [
            [
                "b0ccc9f9559fe1b1"
            ]
        ]
    },
    {
        "id": "d9ade764157951c1",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 2420,
        "wires": [
            [
                "72227791611cb138"
            ]
        ]
    },
    {
        "id": "72227791611cb138",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Payload2Object",
        "func": "let store = msg.payload;\nlet msg2 = Object.assign({}, store);\nreturn [{payload:(msg2)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2420,
        "wires": [
            [
                "fccd36321a0d857a"
            ]
        ]
    },
    {
        "id": "fccd36321a0d857a",
        "type": "split",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1030,
        "y": 2420,
        "wires": [
            [
                "a23e04b0a3ca55d6"
            ]
        ]
    },
    {
        "id": "a23e04b0a3ca55d6",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "webpage2topic",
        "func": "let value = msg.payload.ip + \"-\" + msg.payload.port;\nmsg.topic = value;\n\nlet results = flow.get(\"ping-results\") || {};\nlet devresults = results[value] || {};\ndevresults.name = msg.payload.name;\ndevresults.ip = msg.payload.ip;\ndevresults.port = msg.payload.port;\n// write back\nresults[value] = devresults;\nflow.set(\"ping-results\", results);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2420,
        "wires": [
            [
                "4d4149d66f32721a"
            ]
        ]
    },
    {
        "id": "4d4149d66f32721a",
        "type": "join",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1370,
        "y": 2420,
        "wires": [
            [
                "a84f133d7e4eae3c"
            ]
        ]
    },
    {
        "id": "a84f133d7e4eae3c",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "flow.set ping-webpage",
        "func": "let store =  msg.payload;\nflow.set(\"ping-webpage\", store);\nreturn [{payload:Object.values(store)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 2420,
        "wires": [
            [
                "c38f40f199c20a55"
            ]
        ]
    },
    {
        "id": "c38f40f199c20a55",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "e7af55a89184cc8f",
        "name": "Ping tool, Restore webpage table (read file)",
        "mode": "link",
        "links": [
            "f9d95b3068658814"
        ],
        "x": 1715,
        "y": 2420,
        "wires": []
    },
    {
        "id": "84ba71cdf4ae82e2",
        "type": "link out",
        "z": "166b3f5d22a2184b",
        "g": "0655677491b8b65b",
        "name": "Ping tool, Restore telegram (read file)",
        "mode": "link",
        "links": [
            "146935cfdb882149"
        ],
        "x": 1185,
        "y": 1720,
        "wires": []
    },
    {
        "id": "88fa8d97ed01a35e",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "0655677491b8b65b",
        "name": "Get save location",
        "func": "delete msg.payload;\nlet destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/telegram-credentials.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "5c6e4e15ea273f4f"
            ]
        ]
    },
    {
        "id": "8a6bb0c24630fb56",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "0655677491b8b65b",
        "name": "Ping tool, start UI",
        "links": [
            "f0ba8d7f10def91b"
        ],
        "x": 155,
        "y": 1720,
        "wires": [
            [
                "88fa8d97ed01a35e"
            ]
        ]
    },
    {
        "id": "5c6e4e15ea273f4f",
        "type": "file in",
        "z": "166b3f5d22a2184b",
        "g": "0655677491b8b65b",
        "name": "Read telegram bot id",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 580,
        "y": 1720,
        "wires": [
            [
                "8b943e2fc13a8c89"
            ]
        ]
    },
    {
        "id": "b15cdbd993c6e2a0",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "Get saved telegram info",
        "func": "delete msg.payload;\nlet telegram = flow.get(\"telegram\");\nlet setbot = { payload: telegram.credentails.bot };\nlet setchatid = { payload: telegram.credentails.chatid };\nlet setbefore = { payload: telegram.credentails.before };\nlet setafter = { payload: telegram.credentails.after };\n\nreturn [setbot, setchatid, setbefore, setafter];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1880,
        "wires": [
            [
                "f5902126afad6b5a"
            ],
            [
                "73aca68d7ad60296"
            ],
            [
                "b46a11b44c0ec868"
            ],
            [
                "61628aa61cb3f639"
            ]
        ]
    },
    {
        "id": "146935cfdb882149",
        "type": "link in",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "Ping tool, set telegram after deploy",
        "links": [
            "84ba71cdf4ae82e2"
        ],
        "x": 155,
        "y": 1880,
        "wires": [
            [
                "b15cdbd993c6e2a0"
            ]
        ]
    },
    {
        "id": "f5902126afad6b5a",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "",
        "label": "Telegram BOT credentials",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 25,
        "width": 14,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "bot",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 650,
        "y": 1820,
        "wires": [
            [
                "1e530be405246b27"
            ]
        ]
    },
    {
        "id": "73aca68d7ad60296",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "",
        "label": "Telegram Chat ID credentials",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 26,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "chatid",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 660,
        "y": 1860,
        "wires": [
            [
                "1e530be405246b27"
            ]
        ]
    },
    {
        "id": "1e530be405246b27",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "Set Device settings",
        "func": "let data1 = context.get(\"data1\") || null; \nlet data2 = context.get(\"data2\") || null; \nlet data3 = context.get(\"data3\") || null;\nlet data4 = context.get(\"data4\") || null;\n\nlet settings = flow.get(\"telegram\") || {};\n\nswitch (msg.topic){\n\n    case \"bot\":\n        data1 = msg.payload; \n        context.set(\"data1\", data1);//store in context for next time \n        return;\n    \n    case \"chatid\":\n        data2 = msg.payload; \n        context.set(\"data2\", data2);//store in context for next time \n        return;\n\n    case \"before\":\n        data3 = msg.payload;\n        context.set(\"data3\", data3);//store in context for next time \n        return;\n\n    case \"after\":\n        data4 = msg.payload;\n        context.set(\"data4\", data4);//store in context for next time \n        return;        \n            \n    case \"submit\":\n        if ((data1 !== null) && (data2 !== null)) {\n            let values = [];\n            let dev = settings[\"credentials\"] || {};\n            \n            dev.bot = data1;\n            dev.chatid = data2;\n            if ((data3 === undefined) || (data3 === null)) {\n                dev.before = 600\n            } else {\n                dev.before = data3;\n            }\n            if ((data4 === undefined) || (data4 === null)) {\n                dev.after = 86399400    \n            } else {    \n                dev.after = data4\n            }\n\n            settings[\"credentails\"] = dev;\n            values.push(dev);\n\n            flow.set(\"telegram\", settings);\n        } else {\n            return;\n        }\n    }\n\nreturn [{ payload: Object.values(settings) }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1860,
        "wires": [
            [
                "c68148ee941641dd"
            ]
        ]
    },
    {
        "id": "7db9aaa94ecaf35f",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "",
        "group": "dac2721519016a48",
        "order": 30,
        "width": 24,
        "height": 1,
        "passthru": false,
        "label": "Save telegram settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "str",
        "x": 640,
        "y": 1980,
        "wires": [
            [
                "1e530be405246b27"
            ]
        ]
    },
    {
        "id": "c68148ee941641dd",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "Get save location",
        "func": "let destination = flow.get(\"savefiledestination\");\nmsg.filename = destination + \"/telegram-credentials.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1860,
        "wires": [
            [
                "cbcd5e464785a972"
            ]
        ]
    },
    {
        "id": "cbcd5e464785a972",
        "type": "file",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "Save to file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1530,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "05da5dc31e69d30b",
        "type": "ui_button",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "clear line telegram",
        "group": "dac2721519016a48",
        "order": 24,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Setup telegram credentials",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#E6E6E6",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "ae2fffa6ec0b3d72",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Telegram client message",
        "func": "let d = new Date();\nlet telegram = flow.get(\"telegram\") || {}\nlet message = \"https://api.telegram.org/bot\" + telegram.credentails.bot + \"/sendMessage?chat_id=\" + telegram.credentails.chatid + \"&text=\";\nlet msgtext, time;\nlet timeofday = Number(d.getHours() * 3600000) + (d.getMinutes() * 60000);\n\nif (msg.settings.notification === \"yes\") {\n    if (msg.payload.error === msg.settings.timeout) {\n        if (msg.payload.telegram === \"standby\") {\n            let pingResults = flow.get(\"ping-results\") || {}\n            if ((timeofday < telegram.credentails.before) || (timeofday > telegram.credentails.after)) {\n                //silent\n                msgtext = { payload: '' + message + 'Client ' + msg.payload.name + ' (' + msg.topic + ') has ' + msg.payload.error + ' timeouts&disable_notification=true' };\n            } else {\n                msgtext = { payload: '' + message + 'Client ' + msg.payload.name + ' (' + msg.topic + ') has ' + msg.payload.error + ' timeouts' };\n            }\n            let thisPing = pingResults[msg.topic] || {};\n            thisPing.telegram = \"message\";\n            pingResults[msg.topic] = thisPing;\n            flow.set(\"ping-results\", pingResults);\n            return msgtext;\n        }\n    } else if (msg.payload.error === 0) {\n        if (msg.payload.telegram === \"message\") {\n            let pingResults = flow.get(\"ping-results\") || {}\n            if ((timeofday < telegram.credentails.before) || (timeofday > telegram.credentails.after)) {\n                //silent\n                msgtext = { payload: '' + message + 'Client ' + msg.payload.name + ' (' + msg.topic + ') is back online&disable_notification=true' };\n            } else {\n                msgtext = { payload: '' + message + 'Client ' + msg.payload.name + ' (' + msg.topic + ') is back online' };\n            }\n            let thisPing = pingResults[msg.topic] || {};\n            thisPing.telegram = \"standby\";\n            pingResults[msg.topic] = thisPing;\n            flow.set(\"ping-results\", pingResults);\n            return msgtext;\n        }\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1460,
        "wires": [
            [
                "beb7bb9db7edfa83"
            ]
        ]
    },
    {
        "id": "b46a11b44c0ec868",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "",
        "label": "Silent before",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 28,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "before",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 1900,
        "wires": [
            [
                "1e530be405246b27"
            ]
        ]
    },
    {
        "id": "61628aa61cb3f639",
        "type": "ui_text_input",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "",
        "label": "Silent after",
        "tooltip": "",
        "group": "dac2721519016a48",
        "order": 29,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "after",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 1940,
        "wires": [
            [
                "1e530be405246b27"
            ]
        ]
    },
    {
        "id": "9e910e80179fc615",
        "type": "ui_text",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "group": "dac2721519016a48",
        "order": 27,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Send silent telegram notification messages",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 310,
        "y": 1980,
        "wires": []
    },
    {
        "id": "8b943e2fc13a8c89",
        "type": "json",
        "z": "166b3f5d22a2184b",
        "g": "0655677491b8b65b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 1720,
        "wires": [
            [
                "e7735b27bed783c8"
            ]
        ]
    },
    {
        "id": "e7735b27bed783c8",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "0655677491b8b65b",
        "name": "Set telegram credentials",
        "func": "let settings = {};\nlet dev = settings[\"credentials\"] || {};\n\ndev.bot = msg.payload[0].bot;\ndev.chatid = msg.payload[0].chatid;\ndev.before = msg.payload[0].before;\ndev.after = msg.payload[0].after;\nsettings[\"credentails\"] = dev;\n\nflow.set(\"telegram\", settings);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1720,
        "wires": [
            [
                "84ba71cdf4ae82e2"
            ]
        ]
    },
    {
        "id": "3c89a7eb8f399738",
        "type": "inject",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1940,
        "wires": [
            [
                "00ec2250586baf7a"
            ]
        ]
    },
    {
        "id": "00ec2250586baf7a",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "5bfc11d8ddf9e991",
        "name": "Clear",
        "func": "delete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1940,
        "wires": [
            [
                "61628aa61cb3f639",
                "b46a11b44c0ec868",
                "73aca68d7ad60296",
                "f5902126afad6b5a"
            ]
        ]
    },
    {
        "id": "a07b9f020c17b790",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Telegram webpage message",
        "func": "let d = new Date();\nlet telegram = flow.get(\"telegram\") || {}\nlet message = \"https://api.telegram.org/bot\" + telegram.credentails.bot + \"/sendMessage?chat_id=\" + telegram.credentails.chatid + \"&text=\";\nlet msgtext, time;\nlet timeofday = Number(d.getHours() * 3600000) + (d.getMinutes() * 60000);\n\nif (msg.settings.notification === \"yes\") {\n    if (msg.payload.error === msg.settings.timeout) {\n        if (msg.payload.telegram === \"standby\") {\n            let pingResults = flow.get(\"ping-results\") || {}\n            if ((timeofday < telegram.credentails.before) || (timeofday > telegram.credentails.after)) {\n                //silent\n                msgtext = { payload: '' + message + 'Webpage ' + msg.payload.name + ' (' + msg.payload.ip + \":\" + msg.payload.port + ') has ' + msg.payload.error + ' timeouts&disable_notification=true' };\n            } else {\n                msgtext = { payload: '' + message + 'Webpage ' + msg.payload.name + ' (' + msg.payload.ip + \":\" + msg.payload.port + ') has ' + msg.payload.error + ' timeouts' };\n            }\n            let thisPing = pingResults[msg.topic] || {};\n            thisPing.telegram = \"message\";\n            pingResults[msg.topic] = thisPing;\n            flow.set(\"ping-results\", pingResults);\n            return msgtext;\n        }\n    } else if (msg.payload.error === 0) {\n        if (msg.payload.telegram === \"message\") {\n            let pingResults = flow.get(\"ping-results\") || {}\n            if ((timeofday < telegram.credentails.before) || (timeofday > telegram.credentails.after)) {\n                //silent\n                msgtext = { payload: '' + message + 'Webpage ' + msg.payload.name + ' (' + msg.payload.ip + \":\" + msg.payload.port + ') is back online&disable_notification=true' };\n            } else {\n                msgtext = { payload: '' + message + 'Webpage ' + msg.payload.name + ' (' + msg.payload.ip + \":\" + msg.payload.port + ') is back online' };\n            }\n            let thisPing = pingResults[msg.topic] || {};\n            thisPing.telegram = \"standby\";\n            pingResults[msg.topic] = thisPing;\n            flow.set(\"ping-results\", pingResults);\n            return msgtext;\n        }\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1500,
        "wires": [
            [
                "beb7bb9db7edfa83"
            ]
        ]
    },
    {
        "id": "c05f3223354eb6df",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "prepare details",
        "func": "if (msg.payload.port === \"N/A\"){\n    msg.topic = msg.payload.name + \" (ip:\" + msg.payload.ip + \")\";\n} else {\n    msg.topic = msg.payload.name + \" (ip:\" + msg.payload.ip + \":\" + msg.payload.port + \")\";\n}\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1540,
        "wires": [
            [
                "b4a4ffd10afd18e1"
            ]
        ]
    },
    {
        "id": "b4a4ffd10afd18e1",
        "type": "ui_toast",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Show detail info",
        "x": 2360,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "8d25051fff6c6b71",
        "type": "function",
        "z": "166b3f5d22a2184b",
        "g": "193df047762d6c3d",
        "name": "Start time",
        "func": "let d = new Date();\nmsg.startping = d.getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1500,
        "wires": [
            [
                "ea6e75af454187d9"
            ]
        ]
    },
    {
        "id": "dac2721519016a48",
        "type": "ui_group",
        "name": "Ping tool",
        "tab": "754ed74f8d6d9565",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "754ed74f8d6d9565",
        "type": "ui_tab",
        "name": "PingTool",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    }
]
